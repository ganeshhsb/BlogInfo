package com.markata.ganesh_hs.ui.blog.di

import android.content.Context
import androidx.lifecycle.ViewModel
import com.markata.ganesh_hs.common.AppApplication
import com.markata.ganesh_hs.common.INetworkChecker
import com.markata.ganesh_hs.common.NetworkChecker
import com.markata.ganesh_hs.common.RestfulAPIClient
import com.markata.ganesh_hs.data.blog.repo.Blog
import com.markata.ganesh_hs.data.blog.repo.IBlogRepository
import com.markata.ganesh_hs.di.dagger.AppModule
import dagger.MapKey
import dagger.Module
import dagger.Provides
import io.reactivex.Single
import kotlin.reflect.KClass

/**
 * Annotation to be applied to a getter or setter function, that is stored in the binary output.
 * A [ViewModelKey] object will be the key in a Map generated by Dagger. The value will be the
 * ViewModel to be retrieved based on the key.
 *
 * See com.google.samples.apps.iosched.ui.schedule.ScheduleModule.bindScheduleFragmentViewModel
 * for an usage example.
 */
@Target(
    AnnotationTarget.FUNCTION, AnnotationTarget.PROPERTY_GETTER,
    AnnotationTarget.PROPERTY_SETTER
)
@kotlin.annotation.Retention(AnnotationRetention.RUNTIME)
@MapKey
annotation class ViewModelKey(val value: KClass<out ViewModel>)

@Module
class TestAppModule {

    @Provides
    fun provideApplication(context: Context): AppApplication {
        return context as AppApplication
    }

    @Provides
    fun provideNetworkChecker(): INetworkChecker {
        return NetworkChecker()
    }

    @Provides
    fun provideRestfulAPIClient(): RestfulAPIClient {
        return object : RestfulAPIClient {
            override fun fetchBlog(): Single<String> {
                val tenthChar = ' '
                val templateString = "qwertyuio$tenthChar"
                var content = ""
                for (i in 1..5) {
                    content += templateString
                }
                return Single.just(content)
            }
        }
    }
}